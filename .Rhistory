y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
data2 <-
train <- cbind(subject_train, X_train, dataset, y_train)
dataset <- rep("test", nrow(subject_test))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
aggregate(data, by = data$, FUN = mean)
data
?aggregate
aggregate(x = data, by = list(data$outcome), FUN = mean)
d <- aggregate(x = data, by = list(data$outcome), FUN = mean)
warnings()
d
d <- aggregate(x = data, by = list(data$outcome), FUN = mean)
d <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
dim(d)
d
head(d)
d
data2 <- data2(-c("dataset", "outcome"))
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
data2 <- data2(-c("dataset", "outcome"))
tail(data2)
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
data2 <- data2(-c("dataset", "outcome"))
data2 <- data2[-c("dataset", "outcome")]
data2 <- select(data2, -c(outcome, dataset))
library(dplyr)
data2 <- select(data2, -c(outcome, dataset))
tail(data2)
dim(data2)
data2
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
data2
class(data2$outcome)
class(data$outcome)
data$outcome <- as.character(data$outcome)
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
data2
data$outcome <- as.numeric(data$outcome)
library(downloader)
library(dplyr)
## Section 1 - Merges the training and the test sets to create one data set.
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
temp <- "wearables.zip"
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
data2 <- select(data2, -c(outcome, dataset))
tail(data2)
# get header data
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
tail(data2)
data2$subject
data$outcome <- as.factor(data$outcome)
data2 <- merge(aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean), data, by = c("outcome", "subject"))
head(data2)
tail(data2)
data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
# reapply outcomes
data2$outcome <- as.factor(data2$outcome)
levels(data$outcome) <- activities
head(data2)
tail(data2)
head(data2$student)
head(data2$subject)
head(data2$subject, 18)
names(data2)
data2 <- data2[-data2$dataset]
data2 <- data2[, -data2$dataset]
data2 <- data2[, -data2$dataset]
data2 <- data2[-colnamees("dataset")]
data2 <- data2[-colnames("dataset")]
data2$dataset <- NULL
names(data2)
data2 <- data2[, c(1, 83, 2:82)]
names(data2)
head(data2$Group.1)
head(data2$Group.2)
head(data2$Group.1, 20)
# get header data
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
# data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$outcome, data$subject), FUN = mean)
# reorder data.frame
data2$dataset <- NULL
data2$outcome <- NULL
data2$subject <- NULL
names(data2$Group.1) <- "outcome"
names(data2$Group.2) <- "subject"
# get header data
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
# data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$subject, data$outcome), FUN = mean)
# reorder data.frame
data2$dataset <- NULL
data2$outcome <- NULL
data2$subject <- NULL
names(data2$Group.1) <- "subject"
names(data2$Group.2) <- "outcome"
head(data2)
rename(data2, Group.1, subject)
rename(data2, Group.1 = subject)
rename(data2, subject = Group.1)
# get header data
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
# data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$subject, data$outcome), FUN = mean)
# reorder data.frame
data2$dataset <- NULL
data2$outcome <- NULL
data2$subject <- NULL
rename(data2, subject = Group.1, outcome = Group.2)
names(data2)
data2 <-rename(data2, subject = Group.1, outcome = Group.2)
names(data2)
# reapply outcomes
data2$outcome <- as.factor(data2$outcome)
levels(data$outcome) <- activities
head(data2)
head(data2, 18)
# get header data
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
# data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$subject, data$outcome), FUN = mean)
# reorder data.frame
data2$dataset <- NULL
data2$outcome <- NULL
data2$subject <- NULL
data2 <-rename(data2, subject = Group.1, outcome = Group.2)
# reapply outcomes
data2$outcome <- as.factor(data2$outcome)
levels(data$outcome) <- activities
## Output
write.table(data2, file = "submission.txt", row.names = FALSE)
s <- read.table("submission.txt")
s
head(s)
dim(s)
s <- read.table("submission.txt", header = TRUE)
dim(s)
names(data2)
library(downloader)
library(dplyr)
## Section 1 - Merges the training and the test sets to create one data set.
#url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
#temp <- "wearables.zip"
#download(url, dest = temp, mode = "wb")
#unzip (temp)
#unlink(temp)
# get header data
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
# data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$subject, data$outcome), FUN = mean)
# reorder data.frame
data2$dataset <- NULL
data2$outcome <- NULL
data2$subject <- NULL
data2 <-rename(data2, subject = Group.1, activity = Group.2)
# reapply outcomes
data2$outcome <- as.factor(data2$outcome)
levels(data$outcome) <- activities
## Output
write.table(data2, file = "submission.txt", row.names = FALSE)
source('D:/Stats/Coursera Data Science/assignments/getting and cleaning data/run_analysis.R')
library(downloader)
library(dplyr)
## Section 1 - Merges the training and the test sets to create one data set.
#url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
#temp <- "wearables.zip"
#download(url, dest = temp, mode = "wb")
#unzip (temp)
#unlink(temp)
# get header data
headers <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
headers <- c("subject", headers$V2, "dataset", "outcome")
# define directories
traindir <- "./UCI HAR Dataset/train/"
testdir <- "./UCI HAR Dataset/test/"
# read training data
subject_train <- read.table(paste(traindir, "subject_train.txt", sep = ""))
X_train <- read.table(paste(traindir, "X_train.txt", sep = ""))
y_train <- read.table(paste(traindir, "y_train.txt", sep = ""))
dataset <- rep("train", nrow(subject_train))
train <- cbind(subject_train, X_train, dataset, y_train)
# read test data
subject_test <- read.table(paste(testdir, "subject_test.txt", sep = ""))
X_test <- read.table(paste(testdir, "X_test.txt", sep = ""))
y_test <- read.table(paste(testdir, "y_test.txt", sep = ""))
dataset <- rep("test", nrow(subject_test))
test <- cbind(subject_test, X_test, dataset, y_test)
# combine training and test data
data <- rbind(train, test)
names(data) <- headers
## Section 2 - Extracts only the measurements on the mean and standard deviation for each measurement.
# 'Mean' is present in headers in uppercase, but these columns are not included in the dataset.
# They seem to represent the result of a function with a mean argument.
meanHeaders <- grep("mean", headers, ignore.case = FALSE)
stdHeaders <- grep("std", headers, ignore.case = FALSE)
# Including subject, dataset and outcome in selected headers
selectedHeaders <- c("subject", headers[c(meanHeaders, stdHeaders)], "dataset", "outcome")
data <- data[, colnames(data) %in% selectedHeaders]
## Section 3 - Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI HAR Dataset/activity_labels.txt")
activities <- activities$V2
data$outcome <- as.factor(data$outcome)
levels(data$outcome) <- activities
## Section 4 - Appropriately labels the data set with descriptive variable names.
# This has already been completed in Section 1
## Section 5 - From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
# data$outcome <- as.numeric(data$outcome)
data2 <- aggregate(x = data, by = list(data$subject, data$outcome), FUN = mean)
# reorder data.frame
data2$dataset <- NULL
data2$outcome <- NULL
data2$subject <- NULL
data2 <-rename(data2, subject = Group.1, activity = Group.2)
# reapply activity
data2$activity <- as.factor(data2$activity)
levels(data$activity) <- activities
## Output
write.table(data2, file = "submission.txt", row.names = FALSE)
names(data2)
head(data2)
tail(data2)
s <- read.table("submission.txt", header = TRUE)
d
s
head(s)
tail(s)
